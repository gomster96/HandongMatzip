{"version":3,"sources":["TabBar.tsx"],"names":["React","StyleSheet","View","I18nManager","Platform","Animated","TabBarItem","TabBarIndicator","memoize","TabBar","state","layout","width","height","scrollAmount","Value","getTabWidth","props","navigationState","tabStyle","flattened","flatten","endsWith","parseFloat","Number","isFinite","scrollEnabled","routes","length","getMaxScrollDistance","tabBarWidth","layoutWidth","normalizeScrollValue","value","tabWidth","Math","max","maxDistance","scrollValue","min","OS","isRTL","getScrollAmount","i","centerDistance","resetScroll","scrollView","scrollTo","x","animated","handleLayout","e","nativeEvent","setState","getTranslateX","maxScrollDistance","multiply","sub","prevProps","prevState","index","position","jumpTo","bounces","getAccessibilityLabel","getAccessible","getLabelText","getTestID","renderBadge","renderIcon","renderLabel","activeColor","inactiveColor","pressColor","pressOpacity","onTabPress","onTabLongPress","labelStyle","indicatorStyle","contentContainerStyle","style","tabBarWidthPercent","translateX","styles","tabBar","indicatorContainer","transform","renderIndicator","scroll","tabContent","container","event","contentOffset","useNativeDriver","el","getNode","map","route","key","Component","defaultProps","title","toUpperCase","accessible","accessibilityLabel","undefined","testID","create","flex","overflow","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","zIndex","flexDirection","flexWrap","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  LayoutChangeEvent,\n  I18nManager,\n  Platform,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport TabBarItem from './TabBarItem';\nimport TabBarIndicator, { Props as IndicatorProps } from './TabBarIndicator';\nimport memoize from './memoize';\nimport {\n  Route,\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n} from './types';\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  scrollEnabled?: boolean;\n  bounces?: boolean;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderIcon?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  renderIndicator: (props: IndicatorProps<T>) => React.ReactNode;\n  onTabPress?: (scene: Scene<T>) => void;\n  onTabLongPress?: (scene: Scene<T>) => void;\n  tabStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype State = {\n  layout: Layout;\n};\n\nexport default class TabBar<T extends Route> extends React.Component<\n  Props<T>,\n  State\n> {\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<Route>) =>\n      typeof route.title === 'string' ? route.title.toUpperCase() : route.title,\n    getAccessible: ({ route }: Scene<Route>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<Route>) =>\n      typeof route.accessibilityLabel === 'string'\n        ? route.accessibilityLabel\n        : typeof route.title === 'string'\n        ? route.title\n        : undefined,\n    getTestID: ({ route }: Scene<Route>) => route.testID,\n    renderIndicator: (props: IndicatorProps<Route>) => (\n      <TabBarIndicator {...props} />\n    ),\n  };\n\n  state = {\n    layout: { width: 0, height: 0 },\n  };\n\n  componentDidUpdate(prevProps: Props<T>, prevState: State) {\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.navigationState.index !== this.props.navigationState.index ||\n      prevState.layout.width !== this.state.layout.width\n    ) {\n      this.resetScroll(this.props.navigationState.index);\n    }\n  }\n\n  private scrollAmount = new Animated.Value(0);\n\n  private scrollView: ScrollView | undefined;\n\n  private getTabWidth = (props: Props<T>, state: State) => {\n    const { layout } = state;\n    const { navigationState, tabStyle } = props;\n    const flattened: ViewStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattened) {\n      switch (typeof flattened.width) {\n        case 'number':\n          return flattened.width;\n        case 'string':\n          if (flattened.width.endsWith('%')) {\n            const width = parseFloat(flattened.width);\n            if (Number.isFinite(width)) {\n              return layout.width * (width / 100);\n            }\n          }\n      }\n    }\n\n    if (props.scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / navigationState.routes.length;\n  };\n\n  private getMaxScrollDistance = (tabBarWidth: number, layoutWidth: number) =>\n    tabBarWidth - layoutWidth;\n\n  private normalizeScrollValue = (\n    props: Props<T>,\n    state: State,\n    value: number\n  ) => {\n    const { layout } = state;\n    const { navigationState } = props;\n    const tabWidth = this.getTabWidth(props, state);\n    const tabBarWidth = Math.max(\n      tabWidth * navigationState.routes.length,\n      layout.width\n    );\n    const maxDistance = this.getMaxScrollDistance(tabBarWidth, layout.width);\n    const scrollValue = Math.max(Math.min(value, maxDistance), 0);\n\n    if (Platform.OS === 'android' && I18nManager.isRTL) {\n      // On Android, scroll value is not applied in reverse in RTL\n      // so we need to manually adjust it to apply correct value\n      return maxDistance - scrollValue;\n    }\n\n    return scrollValue;\n  };\n\n  private getScrollAmount = (props: Props<T>, state: State, i: number) => {\n    const { layout } = state;\n    const tabWidth = this.getTabWidth(props, state);\n    const centerDistance = tabWidth * (i + 1 / 2);\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this.normalizeScrollValue(props, state, scrollAmount);\n  };\n\n  private resetScroll = (value: number) => {\n    if (this.props.scrollEnabled) {\n      this.scrollView &&\n        this.scrollView.scrollTo({\n          x: this.getScrollAmount(this.props, this.state, value),\n          animated: true,\n        });\n    }\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  private getTranslateX = memoize(\n    (scrollAmount: Animated.Node<number>, maxScrollDistance: number) =>\n      Animated.multiply(\n        Platform.OS === 'android' && I18nManager.isRTL\n          ? Animated.sub(maxScrollDistance, scrollAmount)\n          : scrollAmount,\n        I18nManager.isRTL ? 1 : -1\n      )\n  );\n\n  render() {\n    const {\n      position,\n      navigationState,\n      jumpTo,\n      scrollEnabled,\n      bounces,\n      getAccessibilityLabel,\n      getAccessible,\n      getLabelText,\n      getTestID,\n      renderBadge,\n      renderIcon,\n      renderLabel,\n      activeColor,\n      inactiveColor,\n      pressColor,\n      pressOpacity,\n      onTabPress,\n      onTabLongPress,\n      tabStyle,\n      labelStyle,\n      indicatorStyle,\n      contentContainerStyle,\n      style,\n    } = this.props;\n    const { layout } = this.state;\n    const { routes } = navigationState;\n    const tabWidth = this.getTabWidth(this.props, this.state);\n    const tabBarWidth = tabWidth * routes.length;\n    const tabBarWidthPercent = `${routes.length * 40}%`;\n    const translateX = this.getTranslateX(\n      this.scrollAmount,\n      this.getMaxScrollDistance(tabBarWidth, layout.width)\n    );\n\n    return (\n      <Animated.View\n        onLayout={this.handleLayout}\n        style={[styles.tabBar, style]}\n      >\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled ? { transform: [{ translateX }] as any } : null,\n            tabBarWidth\n              ? { width: tabBarWidth }\n              : scrollEnabled\n              ? { width: tabBarWidthPercent }\n              : null,\n          ]}\n        >\n          {this.props.renderIndicator({\n            position,\n            layout,\n            navigationState,\n            jumpTo,\n            width: tabWidth,\n            style: indicatorStyle,\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled\n                ? { width: tabBarWidth || tabBarWidthPercent }\n                : styles.container,\n              contentContainerStyle,\n            ]}\n            scrollEventThrottle={16}\n            onScroll={Animated.event(\n              [\n                {\n                  nativeEvent: {\n                    contentOffset: { x: this.scrollAmount },\n                  },\n                },\n              ],\n              { useNativeDriver: true }\n            )}\n            ref={el => {\n              // @ts-ignore\n              this.scrollView = el && el.getNode();\n            }}\n          >\n            {routes.map((route: T) => (\n              <TabBarItem\n                key={route.key}\n                position={position}\n                route={route}\n                navigationState={navigationState}\n                getAccessibilityLabel={getAccessibilityLabel}\n                getAccessible={getAccessible}\n                getLabelText={getLabelText}\n                getTestID={getTestID}\n                renderBadge={renderBadge}\n                renderIcon={renderIcon}\n                renderLabel={renderLabel}\n                activeColor={activeColor}\n                inactiveColor={inactiveColor}\n                pressColor={pressColor}\n                pressOpacity={pressOpacity}\n                onPress={() => {\n                  onTabPress && onTabPress({ route });\n                  this.props.jumpTo(route.key);\n                }}\n                onLongPress={() => onTabLongPress && onTabLongPress({ route })}\n                labelStyle={labelStyle}\n                style={tabStyle}\n              />\n            ))}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: 'scroll',\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n      width: 0,\n    },\n    zIndex: 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]}